version: "3"
services:
  backend:
    container_name: backend
    build: ./node/backend 
    ports:
      - 8800:8800 
    volumes:
      - ./backend:/app
    command: npx nodemon index.js  # Use nodemon for auto-reloading in development
    restart: always
    env_file:
      - ./backend/.env
    networks:
      - Voxia
    profiles:
      - dev

  frontend:
    container_name: frontend
    build: ./node/frontend
    ports:
      - "3000:3000"    
    volumes:
      - './node/frontend:/usr/src/app'
      - '/usr/src/app/node_modules'
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true
  
  rasa:
    image: rasa/rasa:2.0.4-full
    user: "${UID}:${GID}"
    ports:
      - "5005:5005"
    volumes:
      - ./frontend:/app
    restart: always
    networks:
      - Voxia
    profiles:
      - dev

  backend_prod:
    image: ${BACKEND_IMAGE_PROD}
    container_name: backend_prod
    ports:
      - '5000:5000'
    env_file:
      - ./.env
    networks:
      - Voxia

  frontend_prod:
    image: ${FRONTEND_IMAGE_PROD}
    container_name: frontend_prod
    ports:
      - '3000:3000'
    depends_on:
      - backend_prod
    env_file:
      - ./.env
    networks:
      - Voxia
    profiles:
      - prod

  rasa:
    image: rasa/rasa:2.0.4-full
    user: "1000:1000"
    ports:
      - "5005:5005"
    volumes:
      - "./rasa/app/:/app/"
    command:
      - run
      - --endpoints 
      - endpoints.yml
      - --debug
    networks:
      - Voxia

  action_server:
    image: rasa/rasa-sdk:2.0.0
    user: "1000:1000"
    ports:
      - "5055:5055"
    volumes:
    networks:
      - Voxia

  duckling:
    image: rasa/duckling:latest
    user: "1000:1000"
    ports:
      - "8000:8000"
    networks:
      - Voxia

  action_server:
    image: rasa/rasa-sdk:2.0.0
    user: "${UID}:${GID}"
    ports:
      - "5055:5055"
    volumes:
      - "./rasadocker/app/actions:/app/actions"

  duckling:
    image: rasa/duckling:latest
    user: "${UID}:${GID}"
    ports:
      - "8000:8000"

volumes:
  mongo-storage:
    driver: local